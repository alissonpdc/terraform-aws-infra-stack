name: "[2] CONTINUOUS DEPLOYMENT"

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  TerraformPlan:
    runs-on: ubuntu-latest
    environment: terraform-aws-infra-webapp-secrets-env
    steps:
      - uses: actions/checkout@v3
      
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}

      - name: Terraform Plan
        run : | 
          cd terraform
          terraform init
          terraform plan -out plan.out -input=false
      
      - name: Upload plan.out
        run : | 
          echo "==> Uploading plan.out to S3 Bucket"
          aws s3 cp terraform/plan.out s3://alissonpdc-terraform-remote-state-bucket/terraform-aws-infra-webapp/

  TerraformApply:
    runs-on: ubuntu-latest
    environment: terraform-aws-infra-webapp-secrets-env
    needs:
      - TerraformPlan
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}

      - name: Download plan.out
        run : | 
          echo "==> Downloading plan.out from S3 Bucket"
          cd terraform
          aws s3api get-object --bucket alissonpdc-terraform-remote-state-bucket --key terraform-aws-infra-webapp/plan.out plan.out

      - name: Terraform Deploy
        run : | 
          cd terraform
          terraform init
          terraform apply plan.out

  ManageCredentials:
    runs-on: ubuntu-latest
    environment: terraform-aws-infra-webapp-secrets-env
    needs:
      - TerraformApply
    steps:
      - uses: actions/checkout@v3
      - uses: moia-oss/setup-eksctl@v1

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}

      - name: Manage EKS RBAC credentials
        run: |
          eksctl get iamidentitymapping --cluster eks-cluster --region=us-east-1
          kubectl apply -f https://s3.us-west-2.amazonaws.com/amazon-eks/docs/eks-console-full-access.yaml
          eksctl create iamidentitymapping --cluster eks-cluster --region=us-east-1 \
            --arn arn:aws:iam::211125453026:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AdministratorAccess_018645c6c1d0e0fc \
            --username admin --group eks-console-dashboard-full-access-group --no-duplicate-arns

        